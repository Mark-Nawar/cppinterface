// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _cppinterface_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// R_getMaxMin
double R_getMaxMin(NumericVector x, int choice);
RcppExport SEXP _cppinterface_R_getMaxMin(SEXP xSEXP, SEXP choiceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type choice(choiceSEXP);
    rcpp_result_gen = Rcpp::wrap(R_getMaxMin(x, choice));
    return rcpp_result_gen;
END_RCPP
}
// Rsort
NumericVector Rsort(NumericVector x, int order);
RcppExport SEXP _cppinterface_Rsort(SEXP xSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(Rsort(x, order));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cppinterface_rcpp_hello_world", (DL_FUNC) &_cppinterface_rcpp_hello_world, 0},
    {"_cppinterface_R_getMaxMin", (DL_FUNC) &_cppinterface_R_getMaxMin, 2},
    {"_cppinterface_Rsort", (DL_FUNC) &_cppinterface_Rsort, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_cppinterface(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
